services:
  flask:
    build: .
    container_name: alpha-trader-flask
    restart: always
    ports:
      - "5000:5000"
      - "8000:8000" 
    env_file:
      - .env    
    volumes:
      - .:/app      
      - prometheus_metrics_volume:/prometheus_metrics
    depends_on:
      - redis
      - prometheus
    command: gunicorn --bind 0.0.0.0:5000 -c /app/gunicorn_config.py 'app:create_app()'
    networks:
      - alpha-network

  celery_worker:
    build: .
    container_name: alpha-trader-celery
    restart: always
    env_file:
      - .env      
    volumes:
      - .:/app
      - prometheus_metrics_volume:/prometheus_metrics
    depends_on: 
      - redis
    command: celery -A app.celery worker --loglevel=info
    networks:
      - alpha-network

  celery_beat:
    build: .
    container_name: alpha-trader-celery-beat
    restart: always
    env_file:
      - .env      
    volumes:
      - .:/app      
      - prometheus_metrics_volume:/prometheus_metrics
    depends_on:
      - redis
    command: celery -A app.celery beat --loglevel=info
    networks:
      - alpha-network

  redis-exporter:
    image: oliver006/redis_exporter:v1.74.0-alpine
    container_name: alpha-trader-redis-exporter
    restart: always
    depends_on:
      - redis
    command: -redis.addr redis:6379
    networks:
      - alpha-network
  
  flower:
    image: mher/flower
    container_name: alpha-trader-flower
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
      - celery_worker
    networks:
      - alpha-network

  redis:
    image: redis:alpine
    container_name: alpha-trader-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - alpha-network

  prometheus:
    image: prom/prometheus
    container_name: alpha-trader-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: always
    networks:
      - alpha-network

  grafana:
    image: grafana/grafana:latest
    container_name: alpha-trader-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    restart: always
    networks:
      - alpha-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
  prometheus_metrics_volume:

networks:
  alpha-network:
    driver: bridge